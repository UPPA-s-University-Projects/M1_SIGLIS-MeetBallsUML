@startuml 
    Class "User" as person{
   
        - Int id
        - String name, fname, handle
        - Int age
        - String identity
        - String email
        - String bio
        - Double lon, lat
        - Float perimeter
        - Bool desert
        - Float tauxCuisson 
        - List<CookType> favCookType
        - List<Diet> diets
        - List<User> likedUsers, matchedUsers, dislikedUsers
        - Map<Discussion, List<Message>> discussions

        + void addObjectToList(List<Object> list, User o)
        + void removeObjectFromList(List<Object> list, Object o)
        + List<User> itsCookingTime(List<User> users)
        + void writeMessage(Message m, Discussion d)
        + void leaveDiscussion(Discussion d)
    }

    Class "Discussion" as discuss{
        - Int id
        - List<Message> messages
        - List<Person> participants
        - Observable observable

        + Message addMsg(Message m)
        + Message updateMessages(Message m)
        + void removeMsg(Message m)
    }

    Class "Message" as messaging{
        - Int id
        - String messages        
        - DateTime timestamp
        - Person sender
        - Discussion discussion
    }

    Interface "MessagingSystemObserver" as observer{
        + void recieveNewMessage(Discussion d, Message m)
    }

    Interface "MessagingSystemObservable" as observable{
        + void addObserver(Observer o)
        + void removeObserver(Observer o)
        + void notifyObservers()
    }
    

    discuss "1" *-- "0..*" messaging
    messaging "1" -- "1" person
    person "2" *-- "0..*" discuss

    discuss .|> observable
    person .|> observer
@enduml