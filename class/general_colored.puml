@startuml 
    Class "User" as person #D2738D-8DD273{
   
        - Int id
        - String name, fname, handle
        - Int age
        - String identity
        - String email
        - String bio
        - Double lon, lat
        - Float perimeter
        - Bool desert
        - Float tauxCuisson 
        - List<CookType> favCookType
        - List<Diet> diets
        - List<User> likedUsers, matchedUsers, dislikedUsers
        - Map<Discussion, List<Message>> discussions

        + void addObjectToList(List<Object> list, User o)
        + void removeObjectFromList(List<Object> list, Object o)
        + List<User> itsCookingTime(List<User> users)
        + void writeMessage(Message m, Discussion d)
        + void leaveDiscussion(Discussion d)
    }

    Class "CookType" as cookType #8DD273{
        - Int id
        - String name
    }

    Class "Diet" as diet #8DD273{
        - Int id
        - String name
    }

    Class "Dish" as dish #8DD273{
        - Int id
        - String name
        - String description
        - String image
        - CookType cookType
        - []Diet diets

        + addDiets(Diet d)
        + removeDiets()

    }

    Class "Restaurant" as restaurant #738DD2{
        - Int id
        - String name
        - String address
        - CookType cookType
        - List<Dish> dishes

        + addDish(Dish d)
        + removeDish(Dish d)
    }


    Class "Discussion" as discuss #D2738D{
        - Int id
        - List<Message> messages
        - List<Person> participants
        - Observable observable

        + Message addMsg(Message m)
        + Message updateMessages(Message m)
        + void removeMsg(Message m)
    }

    Class "Message" as messaging #D2738D{
        - Int id
        - String messages        
        - DateTime timestamp
        - Person sender
        - Discussion discussion
    }

    Interface "MessagingSystemObserver" as observer #D2738D{
        + void recieveNewMessage(Discussion d, Message m)
    }

    Interface "MessagingSystemObservable" as observable #D2738D{
        + void addObserver(Observer o)
        + void removeObserver(Observer o)
        + void notifyObservers()
    }

    person o-- "0..4" cookType
    person o-- "0..*" diet
    person - "0..*" person

    dish o-- "1" cookType
    dish o-- "0..*" diet
    

    discuss ..|> observable
    person ..|> observer

    discuss "1" *-- "0..*" messaging
    messaging "1" -- "1" person
    person "2" *-- "0..*" discuss


    restaurant o-- "1" cookType
    restaurant o-- "0..*" dish

    

@enduml